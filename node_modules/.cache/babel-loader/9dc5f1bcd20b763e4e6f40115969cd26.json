{"ast":null,"code":"import { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent'; // Inertial sliding start time threshold\n\nvar momentumTimeThreshold = 300; // Inertial sliding start vertical distance threshold\n\nvar momentumYThreshold = 15;\n/**\n * Calculate the distance of inertial sliding.\n */\n\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\n\n\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n      children = props.children,\n      autoHeight = props.autoHeight,\n      tableBodyRef = props.tableBodyRef,\n      scrollbarXRef = props.scrollbarXRef,\n      scrollbarYRef = props.scrollbarYRef,\n      disabledScroll = props.disabledScroll,\n      loading = props.loading,\n      tableRef = props.tableRef,\n      contentWidth = props.contentWidth,\n      tableWidth = props.tableWidth,\n      scrollY = props.scrollY,\n      minScrollY = props.minScrollY,\n      minScrollX = props.minScrollX,\n      scrollX = props.scrollX,\n      setScrollX = props.setScrollX,\n      setScrollY = props.setScrollY,\n      virtualized = props.virtualized,\n      forceUpdatePosition = props.forceUpdatePosition,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onTouchEnd = props.onTouchEnd,\n      height = props.height,\n      getTableHeight = props.getTableHeight,\n      contentHeight = props.contentHeight,\n      headerHeight = props.headerHeight,\n      rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n\n  var _useState = useState(false),\n      isScrolling = _useState[0],\n      setScrolling = _useState[1];\n\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false); // The start time within the inertial sliding range.\n\n  var momentumStartTime = useRef(0); // The vertical starting value within the inertial sliding range.\n\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n  }, [disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null;\n    setScrolling(false);\n  }, []);\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    if (!tableRef.current) {\n      return;\n    }\n\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n      setScrolling(true);\n\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback, // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    }\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef(); // Stop unending scrolling and remove transition\n\n  var stopScroll = useCallback(function () {\n    var wheelElement = tableBodyRef.current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = scrollbarYRef.current.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n\n    if (!virtualized) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n\n    removeStyle(wheelElement, transitionCSS);\n    removeStyle(handleElement, transitionCSS);\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]); // Handle the Touch event and initialize it when touchstart is triggered.\n\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n        pageX = _event$touches$.pageX,\n        pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event); // Stop unfinished scrolling when Touch starts.\n\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]); // Handle the Touch event and update the scroll when touchmove is triggered.\n\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    var _event$touches$2 = event.touches[0],\n        pageX = _event$touches$2.pageX,\n        pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n\n\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY; // Record the offset value and time under the condition of triggering inertial scrolling.\n\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current); // Enable inertial sliding.\n\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n          delta = _momentum.delta,\n          duration = _momentum.duration,\n          bezier = _momentum.bezier;\n\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n\n    if (top === 0 && left === 0) {\n      return;\n    }\n\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n\n    var height = getTableHeight(); // The maximum range of scrolling value is judged.\n\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight))); // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n\n  var rerender = function rerender() {\n    setScrolling(true);\n    setTimeout(function () {\n      return setScrolling(false);\n    }, 0);\n  };\n\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren3, _scrollbarYRef$curren4;\n\n    if (top === void 0) {\n      top = 0;\n    }\n\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n        nextScrollY = _getControlledScrollT[0],\n        handleScrollY = _getControlledScrollT[1];\n\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : (_scrollbarYRef$curren4 = _scrollbarYRef$curren3.resetScrollBarPosition) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : _scrollbarYRef$curren4.call(_scrollbarYRef$curren3, handleScrollY);\n    forceUpdatePosition();\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY)));\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n        nextScrollX = _getControlledScrollL[0],\n        scrollbarX = _getControlledScrollL[1];\n\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    forceUpdatePosition();\n  };\n\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n        x = _ref.x,\n        y = _ref.y;\n\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n\n  useUpdateEffect(function () {\n    onScrollLeft(0);\n  }, [children]);\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n  }, [height, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6; // Initialize scroll position\n\n\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta) {\n    return handleWheel(0, delta);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo\n  };\n};\n\nexport default useScrollListener;","map":{"version":3,"sources":["D:/WEB444/Assignments/A04/a04/node_modules/rsuite-table/es/utils/useScrollListener.js"],"names":["useRef","useCallback","useState","useEffect","WheelHandler","scrollLeft","scrollTop","on","removeStyle","requestAnimationTimeout","cancelAnimationTimeout","useUpdateEffect","useMount","SCROLLBAR_WIDTH","TRANSITION_DURATION","BEZIER","isSupportTouchEvent","momentumTimeThreshold","momentumYThreshold","momentum","current","start","duration","deceleration","distance","speed","Math","abs","destination","delta","bezier","useScrollListener","props","data","children","autoHeight","tableBodyRef","scrollbarXRef","scrollbarYRef","disabledScroll","loading","tableRef","contentWidth","tableWidth","scrollY","minScrollY","minScrollX","scrollX","setScrollX","setScrollY","virtualized","forceUpdatePosition","onScroll","onTouchMove","onTouchStart","onTouchEnd","height","getTableHeight","contentHeight","headerHeight","rtl","wheelListener","touchStartListener","touchMoveListener","touchEndListener","_useState","isScrolling","setScrolling","touchX","touchY","disableEventsTimeoutId","isTouching","momentumStartTime","momentumStartY","shouldHandleWheelX","shouldHandleWheelY","debounceScrollEndedCallback","handleWheel","deltaX","deltaY","momentumOptions","nextScrollX","nextScrollY","y","min","x","onWheel","_scrollbarXRef$curren","_scrollbarXRef$curren2","_scrollbarYRef$curren","_scrollbarYRef$curren2","onWheelScroll","call","wheelHandler","stopScroll","wheelElement","querySelector","handleElement","handle","transitionCSS","matrix","window","getComputedStyle","getPropertyValue","offsetY","round","split","handleTouchStart","event","_event$touches$","touches","pageX","pageY","Date","getTime","handleTouchMove","_event$touches$2","_event$preventDefault","preventDefault","now","handleTouchEnd","touchDuration","absDeltaY","_momentum","onScrollBody","target","left","top","getControlledScrollTopValue","value","max","rerender","setTimeout","getControlledScrollLeftValue","onScrollTop","_scrollbarYRef$curren3","_scrollbarYRef$curren4","_getControlledScrollT","handleScrollY","resetScrollBarPosition","onScrollLeft","_scrollbarXRef$curren3","_scrollbarXRef$curren4","_getControlledScrollL","scrollbarX","onScrollTo","coord","_ref","releaseListeners","_wheelListener$curren","_touchStartListener$c","_touchMoveListener$cu","_touchEndListener$cur","off","options","passive","tableBody","_scrollbarXRef$curren5","_scrollbarXRef$curren6","onScrollHorizontal","onScrollVertical"],"mappings":"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","sourcesContent":["import { useRef, useCallback, useState, useEffect } from 'react';\nimport WheelHandler from 'dom-lib/WheelHandler';\nimport scrollLeft from 'dom-lib/scrollLeft';\nimport scrollTop from 'dom-lib/scrollTop';\nimport on from 'dom-lib/on';\nimport removeStyle from 'dom-lib/removeStyle';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from './requestAnimationTimeout';\nimport useUpdateEffect from './useUpdateEffect';\nimport useMount from './useMount';\nimport { SCROLLBAR_WIDTH, TRANSITION_DURATION, BEZIER } from '../constants';\nimport isSupportTouchEvent from './isSupportTouchEvent'; // Inertial sliding start time threshold\n\nvar momentumTimeThreshold = 300; // Inertial sliding start vertical distance threshold\n\nvar momentumYThreshold = 15;\n\n/**\n * Calculate the distance of inertial sliding.\n */\nvar momentum = function momentum(current, start, duration) {\n  // Inertial sliding acceleration.\n  var deceleration = 0.003;\n  var distance = current - start;\n  var speed = 2 * Math.abs(distance) / duration;\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n  return {\n    delta: current - destination,\n    duration: TRANSITION_DURATION,\n    bezier: BEZIER\n  };\n};\n/**\n * Add scroll, touch, and wheel monitoring events to the table,\n * and update the scroll position of the table.\n * @param props\n * @returns\n */\n\n\nvar useScrollListener = function useScrollListener(props) {\n  var data = props.data,\n      children = props.children,\n      autoHeight = props.autoHeight,\n      tableBodyRef = props.tableBodyRef,\n      scrollbarXRef = props.scrollbarXRef,\n      scrollbarYRef = props.scrollbarYRef,\n      disabledScroll = props.disabledScroll,\n      loading = props.loading,\n      tableRef = props.tableRef,\n      contentWidth = props.contentWidth,\n      tableWidth = props.tableWidth,\n      scrollY = props.scrollY,\n      minScrollY = props.minScrollY,\n      minScrollX = props.minScrollX,\n      scrollX = props.scrollX,\n      setScrollX = props.setScrollX,\n      setScrollY = props.setScrollY,\n      virtualized = props.virtualized,\n      forceUpdatePosition = props.forceUpdatePosition,\n      onScroll = props.onScroll,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onTouchEnd = props.onTouchEnd,\n      height = props.height,\n      getTableHeight = props.getTableHeight,\n      contentHeight = props.contentHeight,\n      headerHeight = props.headerHeight,\n      rtl = props.rtl;\n  var wheelListener = useRef();\n  var touchStartListener = useRef();\n  var touchMoveListener = useRef();\n  var touchEndListener = useRef();\n\n  var _useState = useState(false),\n      isScrolling = _useState[0],\n      setScrolling = _useState[1];\n\n  var touchX = useRef(0);\n  var touchY = useRef(0);\n  var disableEventsTimeoutId = useRef(null);\n  var isTouching = useRef(false); // The start time within the inertial sliding range.\n\n  var momentumStartTime = useRef(0); // The vertical starting value within the inertial sliding range.\n\n  var momentumStartY = useRef(0);\n  var shouldHandleWheelX = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return true;\n  }, [disabledScroll, loading]);\n  var shouldHandleWheelY = useCallback(function (delta) {\n    if (delta === 0 || disabledScroll || loading) {\n      return false;\n    }\n\n    return delta >= 0 && scrollY.current > minScrollY.current || delta < 0 && scrollY.current < 0;\n  }, [disabledScroll, loading, minScrollY, scrollY]);\n  var debounceScrollEndedCallback = useCallback(function () {\n    disableEventsTimeoutId.current = null;\n    setScrolling(false);\n  }, []);\n  /**\n   * Triggered when scrolling, including: wheel/touch/scroll\n   * @param deltaX\n   * @param deltaY\n   * @param momentumOptions The configuration of inertial scrolling is used for the touch event.\n   */\n\n  var handleWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    if (!tableRef.current) {\n      return;\n    }\n\n    var nextScrollX = contentWidth.current <= tableWidth.current ? 0 : scrollX.current - deltaX;\n    var nextScrollY = scrollY.current - deltaY;\n    var y = Math.min(0, nextScrollY < minScrollY.current ? minScrollY.current : nextScrollY);\n    var x = Math.min(0, nextScrollX < minScrollX.current ? minScrollX.current : nextScrollX);\n    setScrollX(x);\n    setScrollY(y);\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(x), Math.abs(y));\n    forceUpdatePosition(momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.duration, momentumOptions === null || momentumOptions === void 0 ? void 0 : momentumOptions.bezier);\n\n    if (virtualized) {\n      // Add a state to the table during virtualized scrolling.\n      // Make it set CSS `pointer-events:none` on the DOM to avoid wrong event interaction.\n      setScrolling(true);\n\n      if (disableEventsTimeoutId.current) {\n        cancelAnimationTimeout(disableEventsTimeoutId.current);\n      }\n\n      disableEventsTimeoutId.current = requestAnimationTimeout(debounceScrollEndedCallback, // When momentum is enabled, set a delay of 50ms rendering.\n      momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? 50 : 0);\n    }\n  }, [tableRef, contentWidth, tableWidth, scrollX, scrollY, minScrollY, minScrollX, setScrollX, setScrollY, onScroll, forceUpdatePosition, virtualized, debounceScrollEndedCallback]);\n  var onWheel = useCallback(function (deltaX, deltaY, momentumOptions) {\n    var _scrollbarXRef$curren, _scrollbarXRef$curren2, _scrollbarYRef$curren, _scrollbarYRef$curren2;\n\n    handleWheel(deltaX, deltaY, momentumOptions);\n    (_scrollbarXRef$curren = scrollbarXRef.current) === null || _scrollbarXRef$curren === void 0 ? void 0 : (_scrollbarXRef$curren2 = _scrollbarXRef$curren.onWheelScroll) === null || _scrollbarXRef$curren2 === void 0 ? void 0 : _scrollbarXRef$curren2.call(_scrollbarXRef$curren, deltaX);\n    (_scrollbarYRef$curren = scrollbarYRef.current) === null || _scrollbarYRef$curren === void 0 ? void 0 : (_scrollbarYRef$curren2 = _scrollbarYRef$curren.onWheelScroll) === null || _scrollbarYRef$curren2 === void 0 ? void 0 : _scrollbarYRef$curren2.call(_scrollbarYRef$curren, deltaY, momentumOptions !== null && momentumOptions !== void 0 && momentumOptions.duration ? true : false);\n  }, [handleWheel, scrollbarXRef, scrollbarYRef]);\n  var wheelHandler = useRef(); // Stop unending scrolling and remove transition\n\n  var stopScroll = useCallback(function () {\n    var wheelElement = tableBodyRef.current.querySelector('.rs-table-body-wheel-area');\n    var handleElement = scrollbarYRef.current.handle;\n    var transitionCSS = ['transition-duration', 'transition-timing-function'];\n\n    if (!virtualized) {\n      // Get the current translate position.\n      var matrix = window.getComputedStyle(wheelElement).getPropertyValue('transform');\n      var offsetY = Math.round(+matrix.split(')')[0].split(', ')[5]);\n      setScrollY(offsetY);\n    }\n\n    removeStyle(wheelElement, transitionCSS);\n    removeStyle(handleElement, transitionCSS);\n  }, [scrollbarYRef, setScrollY, tableBodyRef, virtualized]); // Handle the Touch event and initialize it when touchstart is triggered.\n\n  var handleTouchStart = useCallback(function (event) {\n    var _event$touches$ = event.touches[0],\n        pageX = _event$touches$.pageX,\n        pageY = _event$touches$.pageY;\n    touchX.current = pageX;\n    touchY.current = pageY;\n    momentumStartTime.current = new Date().getTime();\n    momentumStartY.current = scrollY.current;\n    isTouching.current = true;\n    onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event); // Stop unfinished scrolling when Touch starts.\n\n    stopScroll();\n  }, [onTouchStart, scrollY, stopScroll]); // Handle the Touch event and update the scroll when touchmove is triggered.\n\n  var handleTouchMove = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    var _event$touches$2 = event.touches[0],\n        pageX = _event$touches$2.pageX,\n        pageY = _event$touches$2.pageY;\n    var deltaX = touchX.current - pageX;\n    var deltaY = autoHeight ? 0 : touchY.current - pageY;\n\n    if (!shouldHandleWheelY(deltaY) && !shouldHandleWheelX(deltaX)) {\n      return;\n    }\n    /**\n     * Prevent the default touch event when the table is scrollable.\n     * fix: https://github.com/rsuite/rsuite-table/commit/21785fc18f430519ab5885c44540d9ffc30de366#commitcomment-36236425\n     */\n\n\n    if (!autoHeight && shouldHandleWheelY(deltaY)) {\n      var _event$preventDefault;\n\n      (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n    }\n\n    var now = new Date().getTime();\n    onWheel(deltaX, deltaY);\n    touchX.current = pageX;\n    touchY.current = pageY; // Record the offset value and time under the condition of triggering inertial scrolling.\n\n    if (now - momentumStartTime.current > momentumTimeThreshold) {\n      momentumStartY.current = scrollY.current;\n      momentumStartTime.current = now;\n    }\n\n    onTouchMove === null || onTouchMove === void 0 ? void 0 : onTouchMove(event);\n  }, [autoHeight, onWheel, onTouchMove, scrollY, shouldHandleWheelX, shouldHandleWheelY]);\n  var handleTouchEnd = useCallback(function (event) {\n    if (!isTouching.current) {\n      return;\n    }\n\n    isTouching.current = false;\n    var touchDuration = new Date().getTime() - momentumStartTime.current;\n    var absDeltaY = Math.abs(scrollY.current - momentumStartY.current); // Enable inertial sliding.\n\n    if (touchDuration < momentumTimeThreshold && absDeltaY > momentumYThreshold) {\n      var _momentum = momentum(scrollY.current, momentumStartY.current, touchDuration),\n          delta = _momentum.delta,\n          duration = _momentum.duration,\n          bezier = _momentum.bezier;\n\n      onWheel(0, delta, {\n        duration: duration,\n        bezier: bezier\n      });\n      onTouchEnd === null || onTouchEnd === void 0 ? void 0 : onTouchEnd(event);\n    }\n  }, [onWheel, onTouchEnd, scrollY]);\n  /**\n   * When the user uses the tab key in the Table, the onScroll event is triggered,\n   * and the scroll bar position should be updated at the same time.\n   * https://github.com/rsuite/rsuite/issues/234\n   */\n\n  var onScrollBody = useCallback(function (event) {\n    if (event.target !== tableBodyRef.current) {\n      return;\n    }\n\n    var left = scrollLeft(event.target);\n    var top = scrollTop(event.target);\n\n    if (top === 0 && left === 0) {\n      return;\n    }\n\n    onWheel(left, top);\n    scrollLeft(event.target, 0);\n    scrollTop(event.target, 0);\n  }, [onWheel, tableBodyRef]);\n  var getControlledScrollTopValue = useCallback(function (value) {\n    if (autoHeight) {\n      return [0, 0];\n    }\n\n    var height = getTableHeight(); // The maximum range of scrolling value is judged.\n\n    value = Math.min(value, Math.max(0, contentHeight.current - (height - headerHeight))); // The value is a value of the theoretical scroll position of the table,\n    // and the scrollY coordinate value and the value of the scroll bar position are calculated by value.\n\n    return [-value, value / contentHeight.current * (height - headerHeight)];\n  }, [autoHeight, contentHeight, getTableHeight, headerHeight]);\n\n  var rerender = function rerender() {\n    setScrolling(true);\n    setTimeout(function () {\n      return setScrolling(false);\n    }, 0);\n  };\n\n  var getControlledScrollLeftValue = function getControlledScrollLeftValue(value) {\n    // The maximum range of scrolling value is judged.\n    value = Math.min(value, Math.max(0, contentWidth.current - tableWidth.current));\n    return [-value, value / contentWidth.current * tableWidth.current];\n  };\n\n  var onScrollTop = function onScrollTop(top) {\n    var _scrollbarYRef$curren3, _scrollbarYRef$curren4;\n\n    if (top === void 0) {\n      top = 0;\n    }\n\n    var _getControlledScrollT = getControlledScrollTopValue(top),\n        nextScrollY = _getControlledScrollT[0],\n        handleScrollY = _getControlledScrollT[1];\n\n    setScrollY(nextScrollY);\n    scrollbarYRef === null || scrollbarYRef === void 0 ? void 0 : (_scrollbarYRef$curren3 = scrollbarYRef.current) === null || _scrollbarYRef$curren3 === void 0 ? void 0 : (_scrollbarYRef$curren4 = _scrollbarYRef$curren3.resetScrollBarPosition) === null || _scrollbarYRef$curren4 === void 0 ? void 0 : _scrollbarYRef$curren4.call(_scrollbarYRef$curren3, handleScrollY);\n    forceUpdatePosition();\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(scrollX.current), Math.abs(nextScrollY)));\n    /**\n     * After calling `scrollTop`, a white screen will appear when `virtualized` is true.\n     * The reason is that the coordinates of the DOM are directly manipulated,\n     * but the component is not re-rendered. Need to call `rerender`.\n     * Fix: rsuite#1044\n     */\n\n    if (virtualized && contentHeight.current > height) {\n      rerender();\n    }\n  };\n\n  var onScrollLeft = function onScrollLeft(left) {\n    var _scrollbarXRef$curren3, _scrollbarXRef$curren4;\n\n    if (left === void 0) {\n      left = 0;\n    }\n\n    var _getControlledScrollL = getControlledScrollLeftValue(left),\n        nextScrollX = _getControlledScrollL[0],\n        scrollbarX = _getControlledScrollL[1];\n\n    setScrollX(nextScrollX);\n    !loading && (onScroll === null || onScroll === void 0 ? void 0 : onScroll(Math.abs(nextScrollX), Math.abs(scrollY.current)));\n    scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren3 = scrollbarXRef.current) === null || _scrollbarXRef$curren3 === void 0 ? void 0 : (_scrollbarXRef$curren4 = _scrollbarXRef$curren3.resetScrollBarPosition) === null || _scrollbarXRef$curren4 === void 0 ? void 0 : _scrollbarXRef$curren4.call(_scrollbarXRef$curren3, scrollbarX);\n    forceUpdatePosition();\n  };\n\n  var onScrollTo = function onScrollTo(coord) {\n    var _ref = coord || {},\n        x = _ref.x,\n        y = _ref.y;\n\n    if (typeof x === 'number') {\n      onScrollLeft(x);\n    }\n\n    if (typeof y === 'number') {\n      onScrollTop(y);\n    }\n  };\n\n  useUpdateEffect(function () {\n    onScrollLeft(0);\n  }, [children]);\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      onScrollTop(Math.abs(scrollY.current));\n    }\n  }, [height, data]);\n  var releaseListeners = useCallback(function () {\n    var _wheelListener$curren, _touchStartListener$c, _touchMoveListener$cu, _touchEndListener$cur;\n\n    wheelHandler.current = null;\n    (_wheelListener$curren = wheelListener.current) === null || _wheelListener$curren === void 0 ? void 0 : _wheelListener$curren.off();\n    (_touchStartListener$c = touchStartListener.current) === null || _touchStartListener$c === void 0 ? void 0 : _touchStartListener$c.off();\n    (_touchMoveListener$cu = touchMoveListener.current) === null || _touchMoveListener$cu === void 0 ? void 0 : _touchMoveListener$cu.off();\n    (_touchEndListener$cur = touchEndListener.current) === null || _touchEndListener$cur === void 0 ? void 0 : _touchEndListener$cur.off();\n  }, []);\n  useEffect(function () {\n    var options = {\n      passive: false\n    };\n    var tableBody = tableBodyRef.current;\n\n    if (tableBody) {\n      // Reset the listener after props is updated.\n      releaseListeners();\n      wheelHandler.current = new WheelHandler(onWheel, shouldHandleWheelX, shouldHandleWheelY, false);\n      wheelListener.current = on(tableBody, 'wheel', wheelHandler.current.onWheel, options);\n\n      if (isSupportTouchEvent()) {\n        touchStartListener.current = on(tableBody, 'touchstart', handleTouchStart, options);\n        touchMoveListener.current = on(tableBody, 'touchmove', handleTouchMove, options);\n        touchEndListener.current = on(tableBody, 'touchend', handleTouchEnd, options);\n      }\n    }\n\n    return releaseListeners;\n  }, [handleTouchEnd, handleTouchMove, handleTouchStart, onWheel, releaseListeners, shouldHandleWheelX, shouldHandleWheelY, tableBodyRef]);\n  useMount(function () {\n    if (rtl) {\n      var _scrollbarXRef$curren5, _scrollbarXRef$curren6;\n\n      // Initialize scroll position\n      setScrollX(tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH);\n      scrollbarXRef === null || scrollbarXRef === void 0 ? void 0 : (_scrollbarXRef$curren5 = scrollbarXRef.current) === null || _scrollbarXRef$curren5 === void 0 ? void 0 : (_scrollbarXRef$curren6 = _scrollbarXRef$curren5.resetScrollBarPosition) === null || _scrollbarXRef$curren6 === void 0 ? void 0 : _scrollbarXRef$curren6.call(_scrollbarXRef$curren5, -scrollX.current);\n      forceUpdatePosition();\n    }\n  });\n  var onScrollHorizontal = useCallback(function (delta) {\n    return handleWheel(delta, 0);\n  }, [handleWheel]);\n  var onScrollVertical = useCallback(function (delta) {\n    return handleWheel(0, delta);\n  }, [handleWheel]);\n  return {\n    isScrolling: isScrolling,\n    onScrollHorizontal: onScrollHorizontal,\n    onScrollVertical: onScrollVertical,\n    onScrollBody: onScrollBody,\n    onScrollTop: onScrollTop,\n    onScrollLeft: onScrollLeft,\n    onScrollTo: onScrollTo\n  };\n};\n\nexport default useScrollListener;"]},"metadata":{},"sourceType":"module"}