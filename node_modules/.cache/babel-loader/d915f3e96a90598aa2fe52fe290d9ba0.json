{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\n\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n      pressDelay = config.pressDelay,\n      transitionDuration = config.transitionDuration,\n      onSort = config.onSort,\n      onSortEnd = config.onSortEnd,\n      onSortMove = config.onSortMove,\n      onSortStart = config.onSortStart;\n\n  var _useState = useState(false),\n      sorting = _useState[0],\n      setSorting = _useState[1];\n\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n\n  var _useManager = useManager(),\n      listItemRegister = _useManager.listItemRegister,\n      getManagedItem = _useManager.getManagedItem,\n      getOrderedItems = _useManager.getOrderedItems;\n\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, targetNode, curManagedItem) {\n    var _activeNodeHelper;\n\n    if (!isMounted()) return;\n    var listItemBaseClassName = targetNode.classList[0]; // get list item base className\n\n    var helperElementClass = listItemBaseClassName + \"-helper\";\n    var holderElementClass = listItemBaseClassName + \"-holder\"; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = curManagedItem.info.index;\n    var activeNodeNextIndex = curManagedItem.info.index;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n      setTranslate3d(activeNodeHelper, activeNodeHolderTranslate); // animate\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var sortingOffsetY = activeNodeOffsetEdge.top + activeNodeHolderTranslate.y + containerScrollDelta.top;\n      var activeNodeHeight = parseFloat(activeNodeStyle.height) || 0;\n\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = listItemManagerRefs[i].info.index;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffset.top) {\n          translate.y = -activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: currentNode.offsetHeight\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffset.top + offsetY) {\n          translate.y = activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -currentNode.offsetHeight\n          };\n\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      setTranslate3d(activeNodeHelper, {\n        x: holderTranslate.x - containerScrollDelta.left,\n        y: holderTranslate.y - containerScrollDelta.top\n      });\n      setTransitionDuration(activeNodeHelper, transitionDuration); // wait for animation\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value; // Clear the cached offsetTop / offsetLeft value\n\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n\n    if ( // is not secondary button pressed\n    mouseDownEvent.button !== 2 && // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled && // is not sorting\n    !sorting && // is valid node\n    targetNode instanceof HTMLElement && // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\n\nexport default useSortHelper;","map":{"version":3,"sources":["D:/WEB444/Assignments/A04/a04/node_modules/rsuite/esm/List/helper/useSortHelper.js"],"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","on","useCallback","useRef","useState","AutoScroller","closestNode","getEdgeOffset","getScrollingParent","isContainInteractiveElement","setInlineStyles","setTransitionDuration","setTranslate3d","useIsMounted","useManager","useSortHelper","config","autoScroll","pressDelay","transitionDuration","onSort","onSortEnd","onSortMove","onSortStart","_useState","sorting","setSorting","containerRef","pressTimer","_useManager","listItemRegister","getManagedItem","getOrderedItems","isMounted","handlePress","mouseDownEvent","targetNode","curManagedItem","_activeNodeHelper","listItemBaseClassName","classList","helperElementClass","holderElementClass","containerElement","current","activeNode","node","activeNodeOldIndex","info","index","activeNodeNextIndex","activeNodeHolderTranslate","x","y","animatedNodesOffset","scrollContainer","initScroll","scrollLeft","scrollTop","autoScroller","offset","left","top","activeNodeBoundingClientRect","getBoundingClientRect","activeNodeOffsetEdge","activeNodeStyle","getComputedStyle","activeNodeHelper","cloneNode","add","position","width","height","parseFloat","marginLeft","marginTop","document","body","appendChild","getContainerScrollDelta","getHolderTranslate","reduce","acc","item","sortMouseMoveListener","window","mouseOverEvent","pageX","pageY","containerScrollDelta","containerBoundingRect","listItemManagerRefs","collection","sortingOffsetY","activeNodeHeight","currentNode","currentNodeIndex","offsetY","offsetHeight","translate","curEdgeOffset","edgeOffset","prvNode","nextNode","update","maxTranslate","minTranslate","oldIndex","newIndex","passive","sortMouseEndListener","event","off","holderTranslate","setTimeout","_activeNodeHelper2","_activeNodeHelper2$pa","parentNode","removeChild","remove","_iterator","_step","el","clear","callbackPayload","nativeEvent","handleStart","triggeredNode","target","Boolean","button","disabled","HTMLElement","contains","preventDefault","handleEnd","clearTimeout","register"],"mappings":"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","sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\n\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n      pressDelay = config.pressDelay,\n      transitionDuration = config.transitionDuration,\n      onSort = config.onSort,\n      onSortEnd = config.onSortEnd,\n      onSortMove = config.onSortMove,\n      onSortStart = config.onSortStart;\n\n  var _useState = useState(false),\n      sorting = _useState[0],\n      setSorting = _useState[1];\n\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n\n  var _useManager = useManager(),\n      listItemRegister = _useManager.listItemRegister,\n      getManagedItem = _useManager.getManagedItem,\n      getOrderedItems = _useManager.getOrderedItems;\n\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, targetNode, curManagedItem) {\n    var _activeNodeHelper;\n\n    if (!isMounted()) return;\n    var listItemBaseClassName = targetNode.classList[0]; // get list item base className\n\n    var helperElementClass = listItemBaseClassName + \"-helper\";\n    var holderElementClass = listItemBaseClassName + \"-holder\"; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = curManagedItem.info.index;\n    var activeNodeNextIndex = curManagedItem.info.index;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n      setTranslate3d(activeNodeHelper, activeNodeHolderTranslate); // animate\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var sortingOffsetY = activeNodeOffsetEdge.top + activeNodeHolderTranslate.y + containerScrollDelta.top;\n      var activeNodeHeight = parseFloat(activeNodeStyle.height) || 0;\n\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = listItemManagerRefs[i].info.index;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffset.top) {\n          translate.y = -activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: currentNode.offsetHeight\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffset.top + offsetY) {\n          translate.y = activeNodeHeight;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -currentNode.offsetHeight\n          };\n\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      setTranslate3d(activeNodeHelper, {\n        x: holderTranslate.x - containerScrollDelta.left,\n        y: holderTranslate.y - containerScrollDelta.top\n      });\n      setTransitionDuration(activeNodeHelper, transitionDuration); // wait for animation\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n\n    if ( // is not secondary button pressed\n    mouseDownEvent.button !== 2 && // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled && // is not sorting\n    !sorting && // is valid node\n    targetNode instanceof HTMLElement && // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\n\nexport default useSortHelper;"]},"metadata":{},"sourceType":"module"}