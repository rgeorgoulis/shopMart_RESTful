{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB444\\\\Assignments\\\\A04\\\\a04\\\\src\\\\components\\\\RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& .MuiTextField-root': {\n      width: '300px'\n    },\n    '& .MuiButtonBase-root': {}\n  }\n}));\n\nconst RegistrationForm = _ref => {\n  _s();\n\n  let {\n    handleClose\n  } = _ref;\n  const classes = useStyles(); // create state variables for each input\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const onCreateAccount = evt => {\n    evt.preventDefault();\n    fetch(`${process.env.REACT_APP_BACK_END_API_DOMAIN}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(json => {\n      alert(json.message);\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    }).catch(err => {\n      console.log(`Error ${err}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"First Name\",\n      variant: \"filled\",\n      required: true,\n      value: firstName,\n      onChange: e => setFirstName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Last Name\",\n      variant: \"filled\",\n      required: true,\n      value: lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      variant: \"filled\",\n      type: \"email\",\n      required: true,\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      variant: \"filled\",\n      type: \"password\",\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"k6tbL/x5mNi8IG5HxnJ4BryZZME=\", false, function () {\n  return [useStyles];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["D:/WEB444/Assignments/A04/a04/src/components/RegistrationForm.js"],"names":["React","useState","makeStyles","TextField","Button","useStyles","theme","root","display","flexDirection","justifyContent","alignItems","width","RegistrationForm","handleClose","classes","formData","setFormData","firstName","lastName","email","password","confirmPassword","onCreateAccount","evt","preventDefault","fetch","process","env","REACT_APP_BACK_END_API_DOMAIN","method","headers","body","JSON","stringify","then","response","json","alert","message","catch","err","console","log","handleSubmit","e","setFirstName","target","value","setLastName","setEmail","setPassword"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        root: {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n\r\n      \r\n          '& .MuiTextField-root': {\r\n\r\n            width: '300px',\r\n          },\r\n          '& .MuiButtonBase-root': {\r\n\r\n          },\r\n        },\r\n    }));\r\nconst RegistrationForm = ({ handleClose }) => {\r\n        const classes = useStyles();\r\n        // create state variables for each input\r\n        const [formData, setFormData] = useState({\r\n          firstName : \"\",\r\n          lastName : \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword : \"\"\r\n      });\r\n      \r\n      const onCreateAccount = (evt)=>{\r\n\r\n        evt.preventDefault();\r\n\r\n\r\n        fetch(`${process.env.REACT_APP_BACK_END_API_DOMAIN}/users`,{\r\n            method :\"POST\",\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify(formData)\r\n        })\r\n        .then(response=>response.json())\r\n        .then(json=>{\r\n    \r\n              alert(json.message);\r\n              setFormData({\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword : \"\"\r\n            })\r\n    \r\n        })\r\n        .catch(err=>{\r\n            console.log(`Error ${err}`)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n      \r\n        <form className={classes.root} onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"First Name\"\r\n            variant=\"filled\"\r\n            required\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Last Name\"\r\n            variant=\"filled\"\r\n            required\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"filled\"\r\n            type=\"email\"\r\n            required\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            variant=\"filled\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <div>\r\n            <Button variant=\"contained\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Signup\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      );\r\n    };\r\nexport default RegistrationForm\r\n"]},"metadata":{},"sourceType":"module"}