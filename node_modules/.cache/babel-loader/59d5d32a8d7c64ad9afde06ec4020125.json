{"ast":null,"code":"/*!\n * Splide.js\n * Version  : 3.3.1\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\n\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\n\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\n\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\n\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\n\nfunction isNull(subject) {\n  return subject === null;\n}\n\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, name => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, node => {\n    const parent = ref.parentNode;\n\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter(child => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach(source => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, attr => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n\n  if (!isNull(value)) {\n    const {\n      style: style2\n    } = elm;\n    value = `${value}`;\n\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({\n    preventScroll: true\n  });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, node => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", {\n      style: `width: ${value}; position: absolute;`\n    }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition) {\n  let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst {\n  min,\n  max,\n  floor,\n  ceil,\n  abs\n} = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, replacement => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\n\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n\n  function on(events, callback, key) {\n    let priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_EVENT_PRIORITY;\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter(handler => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n\n  function emit(event) {\n    (handlers[event] || []).forEach(handler => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n\n  function destroy() {\n    handlers = {};\n  }\n\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach(eventNS => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const {\n    event\n  } = Splide2;\n  const key = {};\n  let listeners = [];\n\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n\n  function off(events) {\n    event.off(events, key);\n  }\n\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter(listener => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n\n        return true;\n      });\n    });\n  }\n\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, target => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n\n  function destroy() {\n    listeners = listeners.filter(data => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const {\n    now\n  } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n\n      if (rate === 1) {\n        onInterval();\n\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n\n      raf(update);\n    }\n  }\n\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n\n  function pause() {\n    paused = true;\n  }\n\n  function rewind() {\n    startTime = now();\n    rate = 0;\n\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n\n  function isPaused() {\n    return paused;\n  }\n\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n\n  function set(value) {\n    state = value;\n  }\n\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n\n  return {\n    set,\n    is\n  };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n\n    initialOptions = merge({}, options);\n    const {\n      breakpoints\n    } = options;\n\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map(point => [point, matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)]);\n      observe();\n    }\n  }\n\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n\n  function observe() {\n    const item = find(points, item2 => item2[1].matches) || [];\n\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n\n      Splide2.options = newOptions;\n    }\n  }\n\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\n\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const {\n      direction\n    } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const {\n    on\n  } = EventInterface(Splide2);\n  const {\n    root\n  } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n\n  function destroy() {\n    [root, track, list].forEach(elm => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n\n  function refresh() {\n    destroy();\n    setup();\n  }\n\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n\n  function getClasses() {\n    return [`${CLASS_ROOT}--${options.type}`, `${CLASS_ROOT}--${options.direction}`, options.drag && `${CLASS_ROOT}--draggable`, options.isNavigation && `${CLASS_ROOT}--nav`, CLASS_ACTIVE];\n  }\n\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [ROLE, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_HIDDEN, ARIA_ORIENTATION, TAB_INDEX, DISABLED];\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const {\n    on,\n    emit,\n    bind,\n    destroy: destroyEvents\n  } = EventInterface(Splide2);\n  const {\n    Components,\n    root,\n    options\n  } = Splide2;\n  const {\n    isNavigation,\n    updateOnMove\n  } = options;\n  const {\n    resolve\n  } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n\n  function mount() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n\n    bind(slide, \"click keydown\", e => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation.bind(this));\n\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n\n  function initNavigation() {\n    const idx = isClone ? slideIndex : index;\n    const label = format(options.i18n.slideX, idx + 1);\n    const controls = Splide2.splides.map(target => target.splide.root.id).join(\" \");\n    setAttribute(slide, ARIA_LABEL, label);\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, \"menuitem\");\n    updateActivity.call(this, isActive());\n  }\n\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n\n  function update() {\n    if (!destroyed) {\n      const {\n        index: currIndex\n      } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n\n    if (focusableNodes) {\n      focusableNodes.forEach(node => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n\n  function isActive() {\n    return Splide2.index === index;\n  }\n\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n\n    return diff <= distance;\n  }\n\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const {\n    on,\n    emit,\n    bind\n  } = EventInterface(Splide2);\n  const {\n    slides,\n    list\n  } = Components2.Elements;\n  const Slides2 = [];\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n\n  function destroy() {\n    forEach$1(Slide2 => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n\n  function refresh() {\n    destroy();\n    init();\n  }\n\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n\n  function get(excludeClones) {\n    return excludeClones ? filter(Slide2 => !Slide2.isClone) : Slides2;\n  }\n\n  function getIn(page) {\n    const {\n      Controller\n    } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter(Slide2 => between(Slide2.index, index, index + max - 1));\n  }\n\n  function getAt(index) {\n    return filter(index)[0];\n  }\n\n  function add(items, index) {\n    forEach(items, slide => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n\n  function remove$1(matcher) {\n    remove(filter(matcher).map(Slide2 => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : Slide2 => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n\n  function style(prop, value, useContainer) {\n    forEach$1(Slide2 => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let {\n      length\n    } = images;\n\n    if (length) {\n      images.forEach(img => {\n        bind(img, \"load error\", () => {\n          if (! --length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const {\n    on,\n    bind,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    Slides\n  } = Components2;\n  const {\n    resolve\n  } = Components2.Direction;\n  const {\n    root,\n    track,\n    list\n  } = Components2.Elements;\n  const {\n    getAt\n  } = Slides;\n  let vertical;\n  let rootRect;\n\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n\n  function resize() {\n    const newRect = rect(root);\n\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n\n  function cssPadding(right) {\n    const {\n      padding\n    } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n\n  function cssTrackHeight() {\n    let height = \"\";\n\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n\n    return height;\n  }\n\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n\n    return 0;\n  }\n\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const {\n    on,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    Elements,\n    Slides\n  } = Components2;\n  const {\n    resolve\n  } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n\n  function refresh() {\n    destroy();\n    init();\n  }\n\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const {\n      length\n    } = slides;\n\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n\n  function computeCloneCount() {\n    let {\n      clones: clones2\n    } = options;\n\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n\n    return clones2;\n  }\n\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const {\n    on,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    slideSize,\n    getPadding,\n    totalSize,\n    listSize,\n    sliderSize\n  } = Components2.Layout;\n  const {\n    resolve,\n    orient\n  } = Components2.Direction;\n  const {\n    list,\n    track\n  } = Components2.Elements;\n  let Transition;\n\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const {\n        set\n      } = Splide2.state;\n      const position = getPosition();\n\n      if (dest !== index) {\n        Transition.cancel();\n        translate(shift(position, dest > index), true);\n      }\n\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Transition.start(index, () => {\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n\n  function loop(position) {\n    if (Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n\n    return position;\n  }\n\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n\n  function cancel() {\n    translate(getPosition());\n    Transition.cancel();\n  }\n\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n\n    return position;\n  }\n\n  function offset(index) {\n    const {\n      focus\n    } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n\n  function isBusy() {\n    return Splide2.state.is(MOVING) && options.waitForTransition;\n  }\n\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const {\n    on\n  } = EventInterface(Splide2);\n  const {\n    Move\n  } = Components2;\n  const {\n    getPosition,\n    getLimit\n  } = Move;\n  const {\n    isEnough,\n    getLength\n  } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n\n  function parse(control) {\n    let index = currIndex;\n\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, getEnd());\n    }\n\n    return index;\n  }\n\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n\n    return destination ? dest : loop(dest);\n  }\n\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n\n  function getEnd() {\n    let end = slideCount - perPage;\n\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n\n    return max(end, 0);\n  }\n\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n\n    return index;\n  }\n\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n\n    return index;\n  }\n\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const {\n    on,\n    bind,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    classes,\n    i18n\n  } = options;\n  const {\n    Elements,\n    Controller\n  } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n\n    if (prev && next) {\n      if (!arrows.prev) {\n        const {\n          id\n        } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n\n  function listen() {\n    const {\n      go\n    } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const {\n    on,\n    bind,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    Elements\n  } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const {\n    isPaused\n  } = interval;\n  let hovered;\n  let focused;\n  let paused;\n\n  function mount() {\n    const {\n      autoplay\n    } = options;\n\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n\n  function listen() {\n    const {\n      root\n    } = Elements;\n\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", e => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", e => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n\n  function pause() {\n    let manual = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n\n    paused = manual;\n  }\n\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n\n  function update(rate) {\n    const {\n      bar\n    } = Elements;\n\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const {\n    on\n  } = EventInterface(Splide2);\n\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n\n  function destroy() {\n    apply(false);\n  }\n\n  function apply(cover) {\n    Components2.Slides.forEach(Slide => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const {\n    on,\n    emit\n  } = EventInterface(Splide2);\n  const {\n    Move\n  } = Components2;\n  const {\n    getPosition,\n    getLimit,\n    exceededLimit\n  } = Move;\n  let interval;\n  let scrollCallback;\n\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, rate => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n\n  function easing(t) {\n    const {\n      easingFunc\n    } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const {\n    on,\n    emit,\n    bind,\n    unbind\n  } = EventInterface(Splide2);\n  const {\n    Move,\n    Scroll,\n    Controller\n  } = Components2;\n  const {\n    track\n  } = Components2.Elements;\n  const {\n    resolve,\n    orient\n  } = Components2.Direction;\n  const {\n    getPosition,\n    exceededLimit\n  } = Move;\n  const listenerOptions = {\n    passive: false,\n    capture: true\n  };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, {\n      capture: true\n    });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n\n  function init() {\n    const {\n      drag\n    } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n\n  function onPointerDown(e) {\n    if (!disabled) {\n      const {\n        noDrag\n      } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n\n    lastEvent = e;\n\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n\n        if (expired || exceeded) {\n          save(e);\n        }\n\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let {\n          dragMinThreshold: thresholds\n        } = options;\n        thresholds = isObject(thresholds) ? thresholds : {\n          mouse: 0,\n          touch: +thresholds || 10\n        };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n\n        prevent(e);\n      }\n\n      emit(EVENT_DRAGGED);\n    } else {\n      if (!isFree) {\n        Controller.go(Splide2.index, true);\n      }\n    }\n\n    dragging = false;\n  }\n\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n\n    return 0;\n  }\n\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n\n  function isDragging() {\n    return dragging;\n  }\n\n  function disable(value) {\n    disabled = value;\n  }\n\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\n\nfunction Keyboard(Splide2, Components2, options) {\n  const {\n    on,\n    bind,\n    unbind\n  } = EventInterface(Splide2);\n  const {\n    root\n  } = Components2.Elements;\n  const {\n    resolve\n  } = Components2.Direction;\n  let target;\n  let disabled;\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, onUpdated);\n    on(EVENT_MOVE, onMove);\n  }\n\n  function init() {\n    const {\n      keyboard = \"global\"\n    } = options;\n\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n\n  function destroy() {\n    unbind(target, \"keydown\");\n\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n\n  function onMove() {\n    disabled = true;\n    nextTick(() => {\n      disabled = false;\n    });\n  }\n\n  function onUpdated() {\n    destroy();\n    init();\n  }\n\n  function onKeydown(e) {\n    if (!disabled) {\n      const {\n        key\n      } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n  }\n\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const {\n    on,\n    off,\n    bind,\n    emit\n  } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n\n  function init() {\n    Components2.Slides.forEach(_Slide => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach(_img => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({\n            _img,\n            _Slide,\n            src,\n            srcset,\n            _spinner\n          });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n\n  function observe() {\n    images = images.filter(data => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n\n      return true;\n    });\n\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n\n  function load(data) {\n    const {\n      _img\n    } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", e => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach(name => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n\n  function onLoad(data, error) {\n    const {\n      _Slide\n    } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const {\n    on,\n    emit,\n    bind,\n    unbind\n  } = EventInterface(Splide2);\n  const {\n    Slides,\n    Elements,\n    Controller\n  } = Components2;\n  const {\n    hasFocus,\n    getIndex\n  } = Controller;\n  const items = [];\n  let list;\n\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n\n  function init() {\n    destroy();\n\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, {\n        list,\n        items\n      }, getAt(Splide2.index));\n      update();\n    }\n  }\n\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach(item => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n\n  function createPagination() {\n    const {\n      length\n    } = Splide2;\n    const {\n      classes,\n      i18n,\n      perPage\n    } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", {\n        class: classes.page,\n        type: \"button\"\n      }, li);\n      const controls = Slides.getIn(i).map(Slide => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({\n        li,\n        button,\n        page: i\n      });\n    }\n  }\n\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n\n    emit(EVENT_PAGINATION_UPDATED, {\n      list,\n      items\n    }, prev, curr);\n  }\n\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\n\nfunction Sync(Splide2, Components2, options) {\n  const {\n    list\n  } = Components2.Elements;\n  const events = [];\n\n  function mount() {\n    Splide2.splides.forEach(target => {\n      !target.isParent && sync(target.splide);\n    });\n\n    if (options.isNavigation) {\n      navigate();\n    }\n  }\n\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n    events.forEach(event => {\n      event.destroy();\n    });\n    empty(events);\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function sync(splide) {\n    [Splide2, splide].forEach(instance => {\n      const event = EventInterface(instance);\n      const target = instance === Splide2 ? splide : Splide2;\n      event.on(EVENT_MOVE, (index, prev, dest) => {\n        target.go(target.is(LOOP) ? dest : index);\n      });\n      events.push(event);\n    });\n  }\n\n  function navigate() {\n    const event = EventInterface(Splide2);\n    const {\n      on\n    } = event;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n\n  return {\n    mount,\n    destroy,\n    remount\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const {\n    bind\n  } = EventInterface(Splide2);\n\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, {\n        passive: false,\n        capture: true\n      });\n    }\n  }\n\n  function onWheel(e) {\n    const {\n      deltaY\n    } = e;\n\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const {\n    on\n  } = EventInterface(Splide2);\n\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n\n  function start(index, done) {\n    const {\n      track\n    } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const {\n    bind\n  } = EventInterface(Splide2);\n  const {\n    Move,\n    Controller\n  } = Components2;\n  const {\n    list\n  } = Components2.Elements;\n  let endCallback;\n\n  function mount() {\n    bind(list, \"transitionend\", e => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n\n  function cancel() {\n    apply(\"\");\n  }\n\n  function getSpeed(index) {\n    const {\n      rewindSpeed\n    } = options;\n\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n\n  mount(Extensions, Transition) {\n    const {\n      state,\n      Components: Components2\n    } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, {\n      Transition: this._Transition\n    });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, component => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n\n  sync(splide) {\n    this.splides.push({\n      splide\n    });\n    splide.splides.push({\n      splide: this,\n      isParent: true\n    });\n\n    if (this.state.is(IDLE)) {\n      this._Components.Sync.remount();\n\n      splide.Components.Sync.remount();\n    }\n\n    return this;\n  }\n\n  go(control) {\n    this._Components.Controller.go(control);\n\n    return this;\n  }\n\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n\n    return this;\n  }\n\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n\n    return this;\n  }\n\n  is(type) {\n    return this._options.type === type;\n  }\n\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n\n  destroy() {\n    let completely = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const {\n      event,\n      state\n    } = this;\n\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, component => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n\n    return this;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    const {\n      _options\n    } = this;\n    merge(_options, options);\n\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n\n};\n\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\nconst CLASS_RENDERED = \"is-rendered\";\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n\n  build() {\n    let css = \"\";\n\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach(breakpoint => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      selector = `#${this.id} ${selector}`.trim();\n      css += `${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n\n  static clean(splide) {\n    const {\n      on\n    } = EventInterface(splide);\n    const {\n      root\n    } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? {\n        html: content\n      } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n\n  registerRootStyles() {\n    this.breakpoints.forEach(_ref => {\n      let [width, options] = _ref;\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n\n  registerTrackStyles() {\n    const {\n      Style: Style2\n    } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(_ref2 => {\n      let [width, options] = _ref2;\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n\n  registerListStyles() {\n    const {\n      Style: Style2\n    } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(_ref3 => {\n      let [width, options] = _ref3;\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n\n      if (!this.cssSlideHeight(options)) {\n        Style2.rule(selector, \"aspect-ratio\", this.cssAspectRatio(options), width);\n      }\n    });\n  }\n\n  registerSlideStyles() {\n    const {\n      Style: Style2\n    } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(_ref4 => {\n      let [width, options] = _ref4;\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, \"height\", this.cssSlideHeight(options) || \"100%\", width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n\n  buildTranslate(options) {\n    const {\n      resolve,\n      orient\n    } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n\n    return values.filter(Boolean).map(value => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n\n  cssOffsetClones(options) {\n    const {\n      resolve,\n      orient\n    } = this.Direction;\n    const cloneCount = this.getCloneCount();\n\n    if (this.isFixedWidth(options)) {\n      const {\n        value,\n        unit: unit2\n      } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n\n  cssOffsetCenter(options) {\n    const {\n      resolve,\n      orient\n    } = this.Direction;\n\n    if (this.isFixedWidth(options)) {\n      const {\n        value,\n        unit: unit2\n      } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n\n    const values = [];\n    const {\n      perPage,\n      gap\n    } = options;\n    values.push(`${orient(50 / perPage)}%`);\n\n    if (gap) {\n      const {\n        value,\n        unit: unit2\n      } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n\n    return values;\n  }\n\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n\n    if (cloneCount && options.gap) {\n      const {\n        orient\n      } = this.Direction;\n      const {\n        value,\n        unit: unit2\n      } = this.parseCssValue(options.gap);\n\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n\n      const {\n        perPage\n      } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n\n    return \"\";\n  }\n\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n\n  cssPadding(options, right) {\n    const {\n      padding\n    } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n\n  cssTrackHeight(options) {\n    let height = \"\";\n\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n\n    return height;\n  }\n\n  cssHeight(options) {\n    return unit(options.height);\n  }\n\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n\n  cssAspectRatio(options) {\n    const {\n      heightRatio\n    } = options;\n    return heightRatio ? `${1 / heightRatio}` : \"\";\n  }\n\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return {\n        value: number,\n        unit: unit2\n      };\n    }\n\n    return {\n      value,\n      unit: \"px\"\n    };\n  }\n\n  parseBreakpoints() {\n    const {\n      breakpoints\n    } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n\n    return false;\n  }\n\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n\n  buildClasses() {\n    const {\n      options\n    } = this;\n    return [CLASS_ROOT, `${CLASS_ROOT}--${options.type}`, `${CLASS_ROOT}--${options.direction}`, options.drag && `${CLASS_ROOT}--draggable`, options.isNavigation && `${CLASS_ROOT}--nav`, CLASS_ACTIVE, !this.config.hidden && CLASS_RENDERED].filter(Boolean).join(\" \");\n  }\n\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n\n  renderSlides() {\n    const {\n      slideTag: tag\n    } = this.config;\n    return this.slides.map(content => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n\n  cover(content) {\n    const {\n      styles,\n      html = \"\"\n    } = content;\n\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n\n  generateClones(contents) {\n    const {\n      classes\n    } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, {\n        class: `${content.attrs.class} ${classes.clone}`\n      });\n      const clone = assign({}, content, {\n        attrs\n      });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n\n  getCloneCount() {\n    if (this.isLoop()) {\n      const {\n        options\n      } = this;\n\n      if (options.clones) {\n        return options.clones;\n      }\n\n      const perPage = max(...this.breakpoints.map(_ref5 => {\n        let [, options2] = _ref5;\n        return options2.perPage;\n      }));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n\n    return 0;\n  }\n\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n\n  renderArrow(prev) {\n    const {\n      classes,\n      i18n\n    } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n\n  html() {\n    const {\n      rootClass,\n      listTag,\n      arrows,\n      beforeTrack,\n      afterTrack,\n      slider,\n      beforeSlider,\n      afterSlider\n    } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n\n    html += beforeTrack || \"\";\n\n    if (arrows) {\n      html += this.renderArrows();\n    }\n\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n\n    html += `</div>`;\n    return html;\n  }\n\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };","map":{"version":3,"sources":["D:/WEB444/Assignments/A04/a04/node_modules/@splidejs/splide/dist/js/splide.esm.js"],"names":["PROJECT_CODE","DATA_ATTRIBUTE","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","STATES","DEFAULT_EVENT_PRIORITY","DEFAULT_USER_EVENT_PRIORITY","empty","array","length","isObject","subject","isNull","isArray","Array","isFunction","isString","isUndefined","isHTMLElement","HTMLElement","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","find","predicate","filter","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","matches","selector","child","firstElementChild","forOwn","object","right","keys","Object","reverse","i","key","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","document","createElement","style","prop","getComputedStyle","style2","display","display2","focus","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","measure","div","width","parseHtml","html","DOMParser","parseFromString","body","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","setTimeout","noop","raf","func","requestAnimationFrame","min","max","floor","ceil","abs","Math","approximatelyEqual","x","y","epsilon","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","sign","camelToKebab","string","replace","toLowerCase","format","replacements","replacement","pad","ids","uniqueId","prefix","EventBus","handlers","on","events","priority","forEachEvent","event","namespace","_event","_callback","_namespace","_priority","_key","sort","handler1","handler2","off","eventHandlers","handler","offBy","emit","apply","destroy","join","eventNS","fragments","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_DRAG","EVENT_DRAGGING","EVENT_DRAGGED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_ARROWS_MOUNTED","EVENT_ARROWS_UPDATED","EVENT_PAGINATION_MOUNTED","EVENT_PAGINATION_UPDATED","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PLAYING","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","listeners","targets","options","event2","addEventListener","unbind","listener","removeEventListener","data","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","rate","id","paused","count","update","elapsed","pause","resume","cancel","rewind","cancelAnimationFrame","isPaused","State","initialState","state","set","is","states","Throttle","duration","throttled","Options","Components2","throttledObserve","observe","initialOptions","points","currPoint","setup","JSON","parse","root","breakpoints","isMin","mediaQuery","n","m","map","point","matchMedia","mount","completely","item","item2","onMatch","newOptions","RTL","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","left","X","Y","ArrowLeft","ArrowRight","Direction","resolve","axisOnly","direction","index","orient","CLASS_ROOT","CLASS_SLIDER","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS","CLASS_PROGRESS_BAR","CLASS_AUTOPLAY","CLASS_PLAY","CLASS_PAUSE","CLASS_SPINNER","CLASS_INITIALIZED","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","Elements","elements","slides","slider","track","list","collect","identify","getClasses","refresh","autoplay","bar","play","type","drag","isNavigation","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","DISABLED","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide$1","slideIndex","destroyEvents","Components","updateOnMove","styles","isClone","container","focusableNodes","destroyed","initNavigation","onMove","idx","label","i18n","slideX","controls","splides","splide","updateActivity","isActive","dest","currIndex","updateVisibility","isVisible","active","visible","ariaHidden","slideFocus","style$1","useContainer","trackRect","slideRect","isWithin","from","distance","diff","Slides","Slides2","init","Slide1","Slide2","register","forEach$1","get","excludeClones","getIn","Controller","toIndex","hasFocus","perPage","getAt","observeImages","remove$1","matcher","images","img","getLength","isEnough","Layout","vertical","rootRect","window","resize","cssPadding","newRect","height","cssTrackHeight","gap","cssSlideWidth","setSlidesHeight","cssSlideHeight","padding","cssHeight","heightRatio","cssSlideSize","fixedHeight","autoHeight","listSize","slideSize","withoutGap","Slide","getGap","totalSize","sliderSize","parseFloat","getPadding","Clones","clones","cloneCount","computeCloneCount","generate","isHead","cloneDeep","cloneNode","clones2","fixedSize","fixedCount","baseCount","flickMaxPages","Move","Transition","reposition","isBusy","Scroll","jump","move","position","getPosition","translate","shift","trimSpace","go","toPosition","preventLoop","transform","loop","exceededMin","exceededLimit","exceededMax","backwards","excess","getLimit","size","minDistance","Infinity","trimming","offset","trim","getEnd","waitForTransition","isLoop","isSlide","prevIndex","slideCount","perMove","control","allowSameIndex","useScroll","scroll","speed","setIndex","destination","useIndex","snap","toDest","indicator","match","computeDestIndex","getNext","getPrev","getAdjacent","incremental","toPage","closest","getIndex","XML_NAME_SPACE","PATH","SIZE","Arrows","wrapper","created","createArrows","listen","createArrow","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","hovered","focused","initButton","forPause","button","pauseOnHover","autoToggle","pauseOnFocus","resetProgress","manual","Cover","cover","toggle","src","BOUNCE_DIFF_THRESHOLD","BOUNCE_DURATION","FRICTION_FACTOR","BASE_VELOCITY","MIN_DURATION","scrollCallback","clear","suppressConstraint","friction","computeDuration","onScrolled","easing","bounce","t","easingFunc","pow","FRICTION","LOG_INTERVAL","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","Drag","listenerOptions","passive","capture","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","hasExceeded","clickPrevented","onPointerDown","onClick","disable","noDrag","isTouch","isTouchEvent","isDraggable","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","dragMinThreshold","thresholds","mouse","touch","isSliderDirection","velocity","computeVelocity","computeDestination","diffX","diffY","base","diffCoord","diffTime","isFlick","flickPower","orthogonal","touches","timeStamp","TouchEvent","isDragging","IE_ARROW_KEYS","Keyboard","onUpdated","keyboard","onKeydown","normalizedKey","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","LazyLoad","isSequential","lazyLoad","_Slide","_img","srcset","_spinner","parentElement","loadNext","preloadPages","load","onLoad","error","Pagination","createPagination","li","class","text","pageX","curr","TRIGGER_KEYS","Sync","isParent","sync","navigate","remount","instance","Wheel","wheel","onWheel","deltaY","ComponentConstructors","freeze","__proto__","I18N","DEFAULTS","Fade","done","endCallback","getSpeed","rewindSpeed","transition","_Splide","constructor","_options","_Extensions","defaults","Extensions","_Components","_Transition","Constructors","Component","component","Splide","CLASS_RENDERED","RENDERER_DEFAULT_CONFIG","listTag","slideTag","Style","rule","breakpoint","selectors","build","css","default","buildSelectors","SplideRenderer","contents","config","clean","parseBreakpoints","initSlides","registerRootStyles","registerTrackStyles","registerSlideStyles","registerListStyles","content","buildStyles","generateClones","Style2","buildTranslate","cssAspectRatio","cssOffsetClones","cssOffsetGaps","isCenter","buildCssValue","cssOffsetCenter","Boolean","getCloneCount","isFixedWidth","unit2","parseCssValue","percent","gapOffset","gaps","isVertical","buildClasses","hidden","buildAttrs","renderSlides","background","unshift","options2","renderArrows","renderArrow","ariaLabel","rootClass","beforeTrack","afterTrack","beforeSlider","afterSlider"],"mappings":"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","sourcesContent":["/*!\n * Splide.js\n * Version  : 3.3.1\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_MOVED, EVENT_SCROLLED], update.bind(this));\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation.bind(this));\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove.bind(this));\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function initNavigation() {\n    const idx = isClone ? slideIndex : index;\n    const label = format(options.i18n.slideX, idx + 1);\n    const controls = Splide2.splides.map((target) => target.splide.root.id).join(\" \");\n    setAttribute(slide, ARIA_LABEL, label);\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, \"menuitem\");\n    updateActivity.call(this, isActive());\n  }\n  function onMove(next, prev, dest) {\n    if (!destroyed) {\n      update.call(this);\n      if (dest === index) {\n        updateActivity.call(this, true);\n      }\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  function updateVisibility(visible) {\n    const ariaHidden = !visible && !isActive();\n    setAttribute(slide, ARIA_HIDDEN, ariaHidden || null);\n    setAttribute(slide, TAB_INDEX, !ariaHidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, ariaHidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    return Splide2.index === index;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    style: style$1,\n    isWithin\n  };\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let Transition;\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      if (dest !== index) {\n        Transition.cancel();\n        translate(shift(position, dest > index), true);\n      }\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Transition.start(index, () => {\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      list.style.transform = `translate${resolve(\"X\")}(${preventLoop ? position : loop(position)}px)`;\n    }\n  }\n  function loop(position) {\n    if (Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n  function cancel() {\n    translate(getPosition());\n    Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return Splide2.state.is(MOVING) && options.waitForTransition;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, getEnd());\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Elements } = Components2;\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    if (bar) {\n      style(bar, \"width\", `${rate * 100}%`);\n    }\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  const listenerOptions = { passive: false, capture: true };\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_UP_EVENTS, noop, listenerOptions);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, listenerOptions);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || isHTMLElement(e.target) && !matches(e.target, noDrag);\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          clickPrevented = false;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, listenerOptions);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, listenerOptions);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(Splide2.index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    } else {\n      if (!isFree) {\n        Controller.go(Splide2.index, true);\n      }\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Components2.Elements;\n  const { resolve } = Components2.Direction;\n  let target;\n  let disabled;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, onUpdated);\n    on(EVENT_MOVE, onMove);\n  }\n  function init() {\n    const { keyboard = \"global\" } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, \"keydown\", onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, \"keydown\");\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function onMove() {\n    disabled = true;\n    nextTick(() => {\n      disabled = false;\n    });\n  }\n  function onUpdated() {\n    destroy();\n    init();\n  }\n  function onKeydown(e) {\n    if (!disabled) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n        destroy();\n        init();\n      });\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const _spinner = create(\"span\", options.classes.spinner, _img.parentElement);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { list } = Components2.Elements;\n  const events = [];\n  function mount() {\n    Splide2.splides.forEach((target) => {\n      !target.isParent && sync(target.splide);\n    });\n    if (options.isNavigation) {\n      navigate();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n    events.forEach((event) => {\n      event.destroy();\n    });\n    empty(events);\n  }\n  function remount() {\n    destroy();\n    mount();\n  }\n  function sync(splide) {\n    [Splide2, splide].forEach((instance) => {\n      const event = EventInterface(instance);\n      const target = instance === Splide2 ? splide : Splide2;\n      event.on(EVENT_MOVE, (index, prev, dest) => {\n        target.go(target.is(LOOP) ? dest : index);\n      });\n      events.push(event);\n    });\n  }\n  function navigate() {\n    const event = EventInterface(Splide2);\n    const { on } = event;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy,\n    remount\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, { passive: false, capture: true });\n    }\n  }\n  function onWheel(e) {\n    const { deltaY } = e;\n    if (deltaY) {\n      Splide2.go(deltaY < 0 ? \"<\" : \">\");\n      prevent(e);\n    }\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push({ splide });\n    splide.splides.push({ splide: this, isParent: true });\n    if (this.state.is(IDLE)) {\n      this._Components.Sync.remount();\n      splide.Components.Sync.remount();\n    }\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      selector = `#${this.id} ${selector}`.trim();\n      css += `${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n      if (!this.cssSlideHeight(options)) {\n        Style2.rule(selector, \"aspect-ratio\", this.cssAspectRatio(options), width);\n      }\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, \"height\", this.cssSlideHeight(options) || \"100%\", width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssAspectRatio(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${1 / heightRatio}` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n"]},"metadata":{},"sourceType":"module"}